#+attr_html: :width 100 px
#+attr_html: :height 100 px
[[./assets/logo.png]]


* Backend
#+BEGIN_SRC bash-ts
  cd backend
#+END_SRC
** Build instructions
#+BEGIN_SRC bash-ts
  cargo build
#+END_SRC
** Running
#+BEGIN_SRC bash-ts
  ./run.sh
#+END_SRC

* Frontend
#+BEGIN_SRC bash-ts
  cd frontend
  npm install
#+END_SRC
** Test build
#+BEGIN_SRC bash-ts
  npm start
#+END_SRC
** Production build
#+BEGIN_SRC bash-ts
  npm run build
#+END_SRC
Static html will be in ~frontend/build~, can be served with any HTTP server of choice.

* Backend endpoints
** ~/create_card_deck~
#+BEGIN_SRC json-ts
  {
    "user_id": 123456,
    "deck_name": "Cool deck"
  }
#+END_SRC
** ~/create_card~
#+BEGIN_SRC json-ts
  {
    "user_id" : 123,
    "deck_id" : 456,
    "question" : "Hello",
    "answer" : "Hi"
  }
#+END_SRC
** ~/new_user~
#+BEGIN_SRC json-ts
   {
     "user_name": "pooman",
     "email": "person@qq.com",
     "passwd_hash": [12, 34, 56, 255]
   }
#+END_SRC
** ~/list_card_decks~
*** request
#+BEGIN_SRC json-ts
  {
    "user_id": 123456
  }
#+END_SRC
*** response
#+BEGIN_SRC json-ts
  {
    "decks": [
      {
	"name": "deck1",
	"deck_id" : 123,
	"num_cards": 20
      },
      {
	"name": "deck2",
	"deck_id" : 456,
	"num_cards": 0
      },
      {
	"name": "cool deck",
	"deck_id" : 789,
	"num_cards": 2000
      }
    ]
  }
#+END_SRC
** ~/list_cards~
*** request
#+BEGIN_SRC json-ts
  {
    "user_id": 123456,
    "deck_id": 8998
  }
#+END_SRC
*** response
#+BEGIN_SRC json-ts
  {
    "cards": [
      {
	"question": "bruh",
	"answer": "idk"
      },
      {
	"question": "mmm",
	"answer": "kkk"
      },
      {
	"question": "what is the last digit of pi",
	"answer": "3"
      }
    ]
  }
#+END_SRC
